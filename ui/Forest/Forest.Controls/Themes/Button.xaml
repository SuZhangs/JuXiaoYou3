<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:f="urn:acorisoft/forest/ui">
    <Style x:Key="ClearStyle.RadioButton" TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="{f:BackgroundBrush}"/>
        <Setter Property="Foreground" Value="{f:ForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="MinWidth" Value="32" />
        <Setter Property="IsTabStop" Value="True" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <DockPanel Background="Transparent">
                        <Border x:Name="PART_Bd"
                                Background="{f:Brush BackgroundLevel1}"
                                BorderThickness="2"
                                CornerRadius="16"
                                Margin="0 0 8 0"
                                Height="23"
                                Width="23"
                                Padding="1">
                            <Path x:Name="PART_Icon"
                                  Data="F1 M24,24z M0,0z M20,6L20,6 9,17 4,12"
                                  StrokeThickness="2"
                                  Stretch="Uniform"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"/>
                        </Border>
                        <ContentPresenter x:Name="ContentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          TextElement.Foreground="{TemplateBinding Foreground}" />
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="False"/>
                                <Condition Property="IsEnabled" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Stroke" TargetName="PART_Icon" Value="{f:Brush HighlightA3}"/>
                            <Setter Property="BorderBrush" TargetName="PART_Bd" Value="{f:Brush HighlightA3}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Stroke" TargetName="PART_Icon" Value="{f:Brush BackgroundLevel1}"/>
                            <Setter Property="Background" TargetName="PART_Bd" Value="{f:Brush HighlightA4}"/>
                            <Setter Property="BorderBrush" TargetName="PART_Bd" Value="Transparent"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="False"/>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Stroke" TargetName="PART_Icon" Value="{f:Brush Overlay200}"/>
                            <Setter Property="BorderBrush" TargetName="PART_Bd" Value="{f:Brush Overlay200}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Stroke" TargetName="PART_Icon" Value="{f:Brush HighlightA1}"/>
                            <Setter Property="BorderBrush" TargetName="PART_Bd" Value="{f:Brush HighlightA1}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Stroke" TargetName="PART_Icon" Value="{f:Brush Overlay100}"/>
                            <Setter Property="BorderBrush" TargetName="PART_Bd" Value="{f:Brush Overlay100}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="RadioButton" BasedOn="{StaticResource ClearStyle.RadioButton}"></Style>
</ResourceDictionary>