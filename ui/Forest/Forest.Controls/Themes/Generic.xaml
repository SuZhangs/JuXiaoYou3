<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Forest.Controls;component/Themes/ScrollViewer.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Forest.Controls;component/Themes/Slider.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Forest.Controls;component/Controls/Drawer.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Forest.Controls;component/Controls/TextBox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Forest.Controls;component/Controls/Island.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Forest.Controls;component/Controls/Buttons/Buttons.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Forest.Controls;component/Controls/Selectors/ListBox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Forest.Controls;component/Controls/Selectors/Menu.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Forest.Controls;component/Controls/Selectors/TabControl.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Forest.Controls;component/Controls/Selectors/TreeView.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- -->
    <!-- <DropShadowEffect x:Key="Ui.Shadow1" Direction="270" ShadowDepth="1" BlurRadius="5" Opacity="0.42" Color="#AA000000"/> -->
    <!-- <DropShadowEffect x:Key="Ui.Shadow2" Direction="270" ShadowDepth="1.5" BlurRadius="8" Opacity="0.42" Color="#AA000000"/> -->
    <!-- <DropShadowEffect x:Key="Ui.Shadow3" Direction="270" ShadowDepth="4.5" BlurRadius="14" Opacity="0.42" Color="#AA000000"/> -->
    <!-- <DropShadowEffect x:Key="Ui.Shadow4" Direction="270" ShadowDepth="8" BlurRadius="25" Opacity="0.42" Color="#AA000000"/> -->
    <!-- <DropShadowEffect x:Key="Ui.Shadow5" Direction="270" ShadowDepth="13" BlurRadius="35" Opacity="0.42" Color="#AA000000"/> -->

    <Style TargetType="HeaderedContentControl">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="HeaderedContentControl">
                    <DockPanel>
                        <ContentPresenter DockPanel.Dock="Top"
                                          TextElement.FontSize="18"
                                          Content="{TemplateBinding Header}"
                                          ContentTemplate="{TemplateBinding HeaderTemplate}"
                                          ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                          ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                          Margin="0 0 0 16"
                                          VerticalAlignment="Stretch"
                                          HorizontalAlignment="Stretch" />

                        <ContentPresenter DockPanel.Dock="Bottom"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--<Thickness x:Key="ExpanderPadding">11,11,11,11</Thickness>
    <Thickness x:Key="ExpanderBorderThemeThickness">1</Thickness>
    <system:Double x:Key="ExpanderChevronSize">16.0</system:Double>

    <ControlTemplate x:Key="DefaultExpanderToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Grid Margin="{TemplateBinding Padding}" Background="Transparent">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <ContentPresenter
                x:Name="ContentPresenter"
                Grid.Column="0"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Content="{TemplateBinding Content}" />
            <Grid
                x:Name="ChevronGrid"
                Grid.Column="1"
                Margin="0"
                VerticalAlignment="Center"
                Background="Transparent"
                RenderTransformOrigin="0.5, 0.5">
                <Grid.RenderTransform>
                    <RotateTransform Angle="0" />
                </Grid.RenderTransform>
                <controls:SymbolIcon
                    x:Name="ControlChevronIcon"
                    FontSize="{StaticResource ExpanderChevronSize}"
                    Foreground="{TemplateBinding Foreground}"
                    Symbol="ChevronDown24" />
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="ChevronGrid"
                                Storyboard.TargetProperty="(Grid.RenderTransform).(RotateTransform.Angle)"
                                To="180"
                                Duration="00:00:00.167" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="ChevronGrid"
                                Storyboard.TargetProperty="(Grid.RenderTransform).(RotateTransform.Angle)"
                                To="0"
                                Duration="00:00:00.167" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="DefaultExpanderStyle" TargetType="{x:Type Expander}">
        --><!--  Universal WPF UI focus  --><!--
        <Setter Property="FocusVisualStyle" Value="{DynamicResource DefaultControlFocusVisualStyle}" />
        --><!--  Universal WPF UI focus  --><!--
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource ControlFillColorDefault}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource TextFillColorPrimary}" />
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlElevationBorderBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource ExpanderBorderThemeThickness}" />
        <Setter Property="Padding" Value="{StaticResource ExpanderPadding}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Border.CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
        <Setter Property="IsExpanded" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border
                        x:Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="1"
                        CornerRadius="4,4,4,4">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            --><!--  Top level controls always visible  --><!--
                            <ToggleButton
                                x:Name="ExpanderToggleButton"
                                Margin="0"
                                Padding="{TemplateBinding Padding}"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                HorizontalContentAlignment="Stretch"
                                VerticalContentAlignment="Center"
                                Background="Transparent"
                                Content="{TemplateBinding Header}"
                                Foreground="{TemplateBinding Foreground}"
                                IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                OverridesDefaultStyle="True"
                                Template="{StaticResource DefaultExpanderToggleButtonStyle}" />

                            --><!--  Collapsed content to expand  --><!--
                            <Border
                                x:Name="ContentPresenterBorder"
                                Grid.Row="1"
                                Background="Transparent"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Opacity="0.0">
                                <ContentPresenter
                                    x:Name="ContentPresenter"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Content="{TemplateBinding Content}" />
                                <Border.LayoutTransform>
                                    <ScaleTransform ScaleY="0" />
                                </Border.LayoutTransform>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ContentPresenterBorder" Property="BorderThickness" Value="0,1,0,0" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ContentPresenterBorder"
                                            Storyboard.TargetProperty="(Border.LayoutTransform).(ScaleTransform.ScaleY)"
                                            From="0.0"
                                            To="1.0"
                                            Duration="00:00:00.167" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="ContentPresenterBorder"
                                            Storyboard.TargetProperty="(Border.Opacity)"
                                            From="0.0"
                                            To="1.0"
                                            Duration="00:00:00.167" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ContentPresenterBorder"
                                            Storyboard.TargetProperty="(Border.LayoutTransform).(ScaleTransform.ScaleY)"
                                            From="1.0"
                                            To="0"
                                            Duration="00:00:00.167" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="ContentPresenterBorder"
                                            Storyboard.TargetProperty="(Border.Opacity)"
                                            From="1.0"
                                            To="0.0"
                                            Duration="00:00:00.167" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ControlFillColorSecondaryBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource ControlFillColorDisabledBrush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource ControlStrokeColorDefaultBrush}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" />
                            <Setter TargetName="ExpanderToggleButton" Property="Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource DefaultExpanderStyle}" TargetType="{x:Type Expander}" />-->

</ResourceDictionary>