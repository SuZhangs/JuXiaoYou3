<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Forest.Controls;component/Themes/ScrollViewer.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/Forest.Controls;component/Themes/Slider.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/Forest.Controls;component/Controls/Drawer.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/Forest.Controls;component/Controls/TextBox.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/Forest.Controls;component/Controls/Island.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/Forest.Controls;component/Controls/Buttons/Buttons.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/Forest.Controls;component/Controls/Selectors/ListBox.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/Forest.Controls;component/Controls/Selectors/TabControl.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/Forest.Controls;component/Controls/Selectors/TreeView.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    
    <!-- -->
    <!-- <DropShadowEffect x:Key="Ui.Shadow1" Direction="270" ShadowDepth="1" BlurRadius="5" Opacity="0.42" Color="#AA000000"/> -->
    <!-- <DropShadowEffect x:Key="Ui.Shadow2" Direction="270" ShadowDepth="1.5" BlurRadius="8" Opacity="0.42" Color="#AA000000"/> -->
    <!-- <DropShadowEffect x:Key="Ui.Shadow3" Direction="270" ShadowDepth="4.5" BlurRadius="14" Opacity="0.42" Color="#AA000000"/> -->
    <!-- <DropShadowEffect x:Key="Ui.Shadow4" Direction="270" ShadowDepth="8" BlurRadius="25" Opacity="0.42" Color="#AA000000"/> -->
    <!-- <DropShadowEffect x:Key="Ui.Shadow5" Direction="270" ShadowDepth="13" BlurRadius="35" Opacity="0.42" Color="#AA000000"/> -->
    
    <Style TargetType="HeaderedContentControl">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="HeaderedContentControl">
                    <DockPanel>
                        <ContentPresenter DockPanel.Dock="Top"
                                          TextElement.FontSize="18"
                                          Content="{TemplateBinding Header}"
                                          ContentTemplate="{TemplateBinding HeaderTemplate}"
                                          ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                          ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                          VerticalAlignment="Stretch"
                                          HorizontalAlignment="Stretch"/>
                        
                        <ContentPresenter DockPanel.Dock="Bottom"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="UiMenu" TargetType="{x:Type Menu}">
        <Setter Property="Background" Value="{SolidColorBrush Color={DynamicResource ControlFillColorDefault}}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <StackPanel ClipToBounds="True" IsItemsHost="True" Orientation="Horizontal" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type Menu}" BasedOn="{StaticResource UiMenu}" TargetType="{x:Type Menu}" />
    
        <converters:IconToStringConverter x:Key="IconToStringConverter" />
    <Style x:Key="UiMenuItemScrollViewer" BasedOn="{StaticResource {x:Type ScrollViewer}}" TargetType="{x:Type ScrollViewer}">
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    </Style>
    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
        <Setter Property="BorderBrush" Value="{DynamicResource ControlElevationBorderBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="0,1,0,1" />
        <Setter Property="BorderThickness" Value="1,1,0,0" />
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border Width="{TemplateBinding Width}" Margin="{TemplateBinding Margin}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
        <ControlTemplate.Triggers>
            <Trigger Property="MenuItem.IsSuspendingPopupAnimation" Value="True">
                <Setter TargetName="Popup" Property="PopupAnimation" Value="None" />
            </Trigger>
            <Trigger Value="{x:Null}" Property="MenuItem.Icon">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Value="{x:Null}" Property="Header">
                <Setter TargetName="Icon" Property="Margin" Value="0" />
                <Setter TargetName="HeaderPresenter" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="MenuItem.IsHighlighted" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{SolidColorBrush Color={DynamicResource SubtleFillColorSecondary}}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{SolidColorBrush Color={DynamicResource TextFillColorDisabled}}" />
            </Trigger>
        </ControlTemplate.Triggers>
        <Border Name="Border" Margin="4" Background="Transparent" CornerRadius="6">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid Margin="10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <ContentPresenter Name="Icon" Grid.Column="0" Margin="0,0,6,0" VerticalAlignment="Center" Content="{TemplateBinding Icon}" />
                    <ContentPresenter Name="HeaderPresenter" Grid.Column="1" VerticalAlignment="Center" ContentSource="Header" RecognizesAccessKey="True" Foreground="{TemplateBinding Foreground}" />
                </Grid>
                <Popup Name="Popup" Grid.Row="1" Grid.Column="0" AllowsTransparency="True" Focusable="False" HorizontalOffset="-12" IsOpen="{TemplateBinding IsSubmenuOpen}" Placement="Bottom" PopupAnimation="Slide" VerticalOffset="1" PlacementTarget="{Binding ElementName=Border}">
                    <Grid>
                        <Border Name="SubmenuBorder" Margin="12,0,12,18" Padding="0,3,0,3" BorderBrush="{DynamicResource MenuBorderColorDefaultBrush}" BorderThickness="1" CornerRadius="8" SnapsToDevicePixels="True" Background="{SolidColorBrush Color={DynamicResource SystemFillColorSolidNeutralBackground}}" Effect="{DropShadowEffect BlurRadius=20, Direction=270, Opacity=0.25, ShadowDepth=6}">
                            <ScrollViewer ScrollViewer.CanContentScroll="True" Style="{StaticResource UiMenuItemScrollViewer}">
                                <StackPanel IsItemsHost="True" DirectionalNavigation="Cycle" />
                            </ScrollViewer>
                        </Border>
                    </Grid>
                </Popup>
            </Grid>
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="{x:Type MenuItem}">
        <ControlTemplate.Triggers>
            <Trigger Property="MenuItem.IsHighlighted" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{SolidColorBrush Color={DynamicResource SubtleFillColorSecondary}}" />
            </Trigger>
            <Trigger Value="{x:Null}" Property="MenuItem.Icon">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Value="{x:Null}" Property="Header">
                <Setter TargetName="Icon" Property="Margin" Value="0" />
                <Setter TargetName="HeaderPresenter" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{SolidColorBrush Color={DynamicResource TextFillColorDisabled}}" />
            </Trigger>
        </ControlTemplate.Triggers>
        <Border Name="Border" Margin="4" Background="Transparent" CornerRadius="6">
            <Grid Margin="10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <ContentPresenter Name="Icon" Grid.Column="0" Margin="0,0,6,0" VerticalAlignment="Center" Content="{TemplateBinding Icon}" />
                <ContentPresenter Name="HeaderPresenter" Grid.Column="1" VerticalAlignment="Center" ContentSource="Header" RecognizesAccessKey="True" Foreground="{TemplateBinding Foreground}" />
            </Grid>
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="{x:Type MenuItem}">
        <ControlTemplate.Triggers>
            <Trigger Property="MenuItem.IsHighlighted" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{SolidColorBrush Color={DynamicResource SubtleFillColorSecondary}}" />
            </Trigger>
            <Trigger Value="{x:Null}" Property="MenuItem.Icon">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="MenuItem.IsCheckable" Value="True">
                <Setter TargetName="CheckBoxIconBorder" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="MenuItem.IsChecked" Value="True">
                <Setter TargetName="CheckBoxIcon" Property="Text" Value="" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{SolidColorBrush Color={DynamicResource TextFillColorDisabled}}" />
            </Trigger>
            <Trigger Property="MenuItem.InputGestureText" Value="">
                <Setter TargetName="InputGestureText" Property="Visibility" Value="Collapsed" />
            </Trigger>
        </ControlTemplate.Triggers>
        <Border Name="Border" Margin="4,1,4,1" Background="Transparent" CornerRadius="4">
            <Grid Margin="8,6,8,6">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                </Grid.ColumnDefinitions>
                <Border Name="CheckBoxIconBorder" Grid.Column="0" Width="20" Height="20" Margin="0,0,6,0" VerticalAlignment="Center" BorderBrush="{DynamicResource ControlElevationBorderBrush}" BorderThickness="1" CornerRadius="4" Visibility="Collapsed" Background="{SolidColorBrush Color={DynamicResource ControlFillColorDefault}}">
                    <TextBlock Name="CheckBoxIcon" HorizontalAlignment="Center" VerticalAlignment="Center" TextBlock.FontFamily="{DynamicResource FluentSystemIcons}" TextBlock.FontSize="16" Text="" TextAlignment="Center" />
                </Border>
                <ContentPresenter Name="Icon" Grid.Column="1" Margin="0,0,6,0" VerticalAlignment="Center" Content="{TemplateBinding Icon}" />
                <ContentPresenter Grid.Column="2" ContentSource="Header" RecognizesAccessKey="True" Foreground="{TemplateBinding Foreground}" />
                <TextBlock Name="InputGestureText" Grid.Column="3" Margin="25,0,0,0" VerticalAlignment="Bottom" DockPanel.Dock="Right" TextBlock.FontSize="11" Foreground="{DynamicResource TextFillColorDisabledBrush}" Text="{TemplateBinding InputGestureText}" />
            </Grid>
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
        <ControlTemplate.Triggers>
            <Trigger Value="{x:Null}" Property="MenuItem.Icon">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="Icon" Property="Margin" Value="0" />
            </Trigger>
            <Trigger Property="MenuItem.IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{SolidColorBrush Color={DynamicResource SubtleFillColorSecondary}}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{SolidColorBrush Color={DynamicResource TextFillColorDisabled}}" />
                <Setter TargetName="Chevron" Property="Foreground" Value="{SolidColorBrush Color={DynamicResource TextFillColorDisabled}}" />
            </Trigger>
        </ControlTemplate.Triggers>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Border Name="Border" Grid.Row="1" Margin="4,1,4,1" BorderThickness="1" CornerRadius="4">
                <Grid Name="MenuItemContent" Margin="8,6,8,6">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <ContentPresenter Name="Icon" Grid.Column="0" Margin="0,0,6,0" VerticalAlignment="Center" Content="{TemplateBinding Icon}" />
                    <ContentPresenter Name="HeaderHost" Grid.Column="1" ContentSource="Header" RecognizesAccessKey="True" />
                    <Grid Grid.Column="2">
                        <controls:SymbolIcon Name="Chevron" Margin="0,3,0,0" VerticalAlignment="Center" FontSize="{TemplateBinding FontSize}" Symbol="ChevronRight20" />
                    </Grid>
                </Grid>
            </Border>
            <Popup Name="Popup" Grid.Row="1" AllowsTransparency="True" Focusable="False" IsOpen="{TemplateBinding IsSubmenuOpen}" Placement="Right" PopupAnimation="Slide" VerticalOffset="-20" PlacementTarget="{Binding ElementName=MenuItemContent}">
                <Grid>
                    <Border Name="SubmenuBorder" Margin="12,10,12,18" Padding="0,3,0,3" BorderBrush="{DynamicResource MenuBorderColorDefaultBrush}" BorderThickness="1" CornerRadius="8" SnapsToDevicePixels="True" Background="{SolidColorBrush Color={DynamicResource SystemFillColorSolidNeutralBackground}}" Effect="{DropShadowEffect BlurRadius=20, Direction=270, Opacity=0.5, ShadowDepth=6}">
                        <ScrollViewer ScrollViewer.CanContentScroll="True" Style="{StaticResource UiMenuItemScrollViewer}">
                            <StackPanel IsItemsHost="True" DirectionalNavigation="Cycle" />
                        </ScrollViewer>
                    </Border>
                </Grid>
            </Popup>
        </Grid>
    </ControlTemplate>
    <Style x:Key="UiMenuItem" TargetType="{x:Type MenuItem}">
        <Style.Triggers>
            <Trigger Property="MenuItem.Role" Value="TopLevelHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}" />
                <Setter Property="Grid.IsSharedSizeScope" Value="True" />
            </Trigger>
            <Trigger Property="MenuItem.Role" Value="TopLevelItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}" />
            </Trigger>
            <Trigger Property="MenuItem.Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}" />
            </Trigger>
            <Trigger Property="MenuItem.Role" Value="SubmenuItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{DynamicResource DefaultControlFocusVisualStyle}" />
        <Setter Property="KeyboardNavigation.IsTabStop" Value="True" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
    </Style>
    <Style x:Key="{x:Type MenuItem}" BasedOn="{StaticResource UiMenuItem}" TargetType="{x:Type MenuItem}" />
    <ControlTemplate x:Key="WpfUiMenuItemTopLevelHeaderTemplateKey" TargetType="{x:Type controls:MenuItem}">
        <ControlTemplate.Triggers>
            <Trigger Property="MenuItem.IsSuspendingPopupAnimation" Value="True">
                <Setter TargetName="Popup" Property="PopupAnimation" Value="None" />
            </Trigger>
            <Trigger Value="{x:Null}" Property="MenuItem.Icon">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="controls:MenuItem.SymbolIcon" Value="Empty">
                <Setter TargetName="SymbolIcon" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="SymbolIcon" Property="Margin" Value="0" />
            </Trigger>
            <Trigger Value="{x:Null}" Property="Header">
                <Setter TargetName="Icon" Property="Margin" Value="0" />
                <Setter TargetName="SymbolIcon" Property="Margin" Value="0" />
                <Setter TargetName="HeaderPresenter" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="MenuItem.IsHighlighted" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{SolidColorBrush Color={DynamicResource SubtleFillColorSecondary}}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{SolidColorBrush Color={DynamicResource TextFillColorDisabled}}" />
            </Trigger>
        </ControlTemplate.Triggers>
        <Border Name="Border" Margin="4" Background="Transparent" CornerRadius="6">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid Margin="10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <ContentPresenter Name="Icon" Grid.Column="0" Margin="0,0,6,0" VerticalAlignment="Center" Content="{TemplateBinding Icon}" />
                    <controls:SymbolIcon Name="SymbolIcon" Grid.Column="1" Margin="0,0,6,0" Filled="{TemplateBinding SymbolIconFilled}" FontSize="{TemplateBinding FontSize}" Symbol="{TemplateBinding SymbolIcon}" />
                    <ContentPresenter Name="HeaderPresenter" Grid.Column="2" VerticalAlignment="Center" ContentSource="Header" RecognizesAccessKey="True" Foreground="{TemplateBinding Foreground}" />
                </Grid>
                <Popup Name="Popup" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" AllowsTransparency="True" Focusable="False" HorizontalOffset="-12" IsOpen="{TemplateBinding IsSubmenuOpen}" Placement="Bottom" PopupAnimation="Slide" VerticalOffset="1" PlacementTarget="{Binding ElementName=Border}">
                    <Grid>
                        <Border Name="SubmenuBorder" Margin="12,0,12,18" Padding="0,3,0,3" BorderBrush="{DynamicResource MenuBorderColorDefaultBrush}" BorderThickness="1" CornerRadius="8" SnapsToDevicePixels="True" Background="{SolidColorBrush Color={DynamicResource SystemFillColorSolidNeutralBackground}}" Effect="{DropShadowEffect BlurRadius=20, Direction=270, Opacity=0.25, ShadowDepth=6}">
                            <ScrollViewer ScrollViewer.CanContentScroll="True" Style="{StaticResource UiMenuItemScrollViewer}">
                                <StackPanel IsItemsHost="True" DirectionalNavigation="Cycle" />
                            </ScrollViewer>
                        </Border>
                    </Grid>
                </Popup>
            </Grid>
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="WpfUiMenuItemTopLevelItemTemplateKey" TargetType="{x:Type controls:MenuItem}">
        <ControlTemplate.Triggers>
            <Trigger Property="MenuItem.IsHighlighted" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{SolidColorBrush Color={DynamicResource SubtleFillColorSecondary}}" />
            </Trigger>
            <Trigger Value="{x:Null}" Property="MenuItem.Icon">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="controls:MenuItem.SymbolIcon" Value="Empty">
                <Setter TargetName="SymbolIcon" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="SymbolIcon" Property="Margin" Value="0" />
            </Trigger>
            <Trigger Value="{x:Null}" Property="Header">
                <Setter TargetName="Icon" Property="Margin" Value="0" />
                <Setter TargetName="SymbolIcon" Property="Margin" Value="0" />
                <Setter TargetName="HeaderPresenter" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{SolidColorBrush Color={DynamicResource TextFillColorDisabled}}" />
            </Trigger>
        </ControlTemplate.Triggers>
        <Border Name="Border" Margin="4" Background="Transparent" CornerRadius="6">
            <Grid Margin="10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <ContentPresenter Name="Icon" Grid.Column="0" Margin="0,0,6,0" VerticalAlignment="Center" Content="{TemplateBinding Icon}" />
                <controls:SymbolIcon Name="SymbolIcon" Grid.Column="1" Margin="0,0,6,0" Filled="{TemplateBinding SymbolIconFilled}" FontSize="{TemplateBinding FontSize}" Symbol="{TemplateBinding SymbolIcon}" />
                <ContentPresenter Name="HeaderPresenter" Grid.Column="2" VerticalAlignment="Center" ContentSource="Header" RecognizesAccessKey="True" Foreground="{TemplateBinding Foreground}" />
            </Grid>
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="WpfUiMenuItemSubmenuItemTemplateKey" TargetType="{x:Type controls:MenuItem}">
        <ControlTemplate.Triggers>
            <Trigger Property="MenuItem.IsHighlighted" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{SolidColorBrush Color={DynamicResource SubtleFillColorSecondary}}" />
            </Trigger>
            <Trigger Value="{x:Null}" Property="MenuItem.Icon">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="controls:MenuItem.SymbolIcon" Value="Empty">
                <Setter TargetName="SymbolIcon" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="SymbolIcon" Property="Margin" Value="0" />
            </Trigger>
            <Trigger Property="MenuItem.IsCheckable" Value="True">
                <Setter TargetName="CheckBoxIconBorder" Property="Visibility" Value="Visible" />
                <Setter TargetName="CheckBoxIconBorder" Property="Margin" Value="0,0,6,0" />
            </Trigger>
            <Trigger Property="MenuItem.IsChecked" Value="True">
                <Setter TargetName="CheckBoxIcon" Property="Text" Value="" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{SolidColorBrush Color={DynamicResource TextFillColorDisabled}}" />
            </Trigger>
            <Trigger Property="MenuItem.InputGestureText" Value="">
                <Setter TargetName="InputGestureText" Property="Visibility" Value="Collapsed" />
            </Trigger>
        </ControlTemplate.Triggers>
        <Border Name="Border" Margin="4,1,4,1" Background="Transparent" CornerRadius="4">
            <Grid Margin="8,6,8,6">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                </Grid.ColumnDefinitions>
                <Border Name="CheckBoxIconBorder" Grid.Column="0" Width="20" Height="20" Margin="0" VerticalAlignment="Center" BorderBrush="{DynamicResource ControlElevationBorderBrush}" BorderThickness="1" CornerRadius="4" Visibility="Collapsed" Background="{SolidColorBrush Color={DynamicResource ControlFillColorDefault}}">
                    <TextBlock Name="CheckBoxIcon" HorizontalAlignment="Center" VerticalAlignment="Center" TextBlock.FontFamily="{DynamicResource FluentSystemIcons}" TextBlock.FontSize="16" Text="" TextAlignment="Center" />
                </Border>
                <ContentPresenter Name="Icon" Grid.Column="1" Margin="0,0,6,0" VerticalAlignment="Center" Content="{TemplateBinding Icon}" />
                <controls:SymbolIcon Name="SymbolIcon" Grid.Column="2" Margin="0,0,6,0" Filled="{TemplateBinding SymbolIconFilled}" FontSize="16" Symbol="{TemplateBinding SymbolIcon}" />
                <ContentPresenter Grid.Column="3" ContentSource="Header" RecognizesAccessKey="True" Foreground="{TemplateBinding Foreground}" />
                <TextBlock Name="InputGestureText" Grid.Column="4" Margin="25,0,0,0" VerticalAlignment="Bottom" DockPanel.Dock="Right" TextBlock.FontSize="11" Foreground="{DynamicResource TextFillColorDisabledBrush}" Text="{TemplateBinding InputGestureText}" />
            </Grid>
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="WpfUiMenuItemSubmenuHeaderTemplateKey" TargetType="{x:Type controls:MenuItem}">
        <ControlTemplate.Triggers>
            <Trigger Value="{x:Null}" Property="MenuItem.Icon">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="Icon" Property="Margin" Value="0" />
            </Trigger>
            <Trigger Property="controls:MenuItem.SymbolIcon" Value="Empty">
                <Setter TargetName="SymbolIcon" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="SymbolIcon" Property="Margin" Value="0" />
            </Trigger>
            <Trigger Property="MenuItem.IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{SolidColorBrush Color={DynamicResource SubtleFillColorSecondary}}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{SolidColorBrush Color={DynamicResource TextFillColorDisabled}}" />
                <Setter TargetName="Chevron" Property="Foreground" Value="{SolidColorBrush Color={DynamicResource TextFillColorDisabled}}" />
            </Trigger>
        </ControlTemplate.Triggers>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Border Name="Border" Grid.Row="1" Margin="4,1,4,1" BorderThickness="1" CornerRadius="4">
                <Grid Name="MenuItemContent" Margin="8,6,8,6">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <ContentPresenter Name="Icon" Grid.Column="0" Margin="0,0,6,0" VerticalAlignment="Center" Content="{TemplateBinding Icon}" />
                    <controls:SymbolIcon Name="SymbolIcon" Grid.Column="1" Margin="0,0,6,0" Filled="{TemplateBinding SymbolIconFilled}" FontSize="16" Symbol="{TemplateBinding SymbolIcon}" />
                    <ContentPresenter Name="HeaderHost" Grid.Column="2" ContentSource="Header" RecognizesAccessKey="True" />
                    <Grid Grid.Column="3">
                        <controls:SymbolIcon Name="Chevron" Margin="0,3,0,0" VerticalAlignment="Center" FontSize="14" Symbol="ChevronRight20" />
                    </Grid>
                </Grid>
            </Border>
            <Popup Name="Popup" Grid.Row="1" AllowsTransparency="True" Focusable="False" IsOpen="{TemplateBinding IsSubmenuOpen}" Placement="Right" PopupAnimation="Slide" VerticalOffset="-20" PlacementTarget="{Binding ElementName=MenuItemContent}">
                <Grid>
                    <Border Name="SubmenuBorder" Margin="12,10,12,18" Padding="0,3,0,3" BorderBrush="{DynamicResource MenuBorderColorDefaultBrush}" BorderThickness="1" CornerRadius="8" SnapsToDevicePixels="True" Background="{SolidColorBrush Color={DynamicResource SystemFillColorSolidNeutralBackground}}" Effect="{DropShadowEffect BlurRadius=20, Direction=270, Opacity=0.5, ShadowDepth=6}">
                        <ScrollViewer ScrollViewer.CanContentScroll="True" Style="{StaticResource UiMenuItemScrollViewer}">
                            <StackPanel IsItemsHost="True" DirectionalNavigation="Cycle" />
                        </ScrollViewer>
                    </Border>
                </Grid>
            </Popup>
        </Grid>
    </ControlTemplate>
    <Style x:Key="WpfUiMenuItem" TargetType="{x:Type controls:MenuItem}">
        <Style.Triggers>
            <Trigger Property="MenuItem.Role" Value="TopLevelHeader">
                <Setter Property="Template" Value="{StaticResource WpfUiMenuItemTopLevelHeaderTemplateKey}" />
                <Setter Property="Grid.IsSharedSizeScope" Value="True" />
            </Trigger>
            <Trigger Property="MenuItem.Role" Value="TopLevelItem">
                <Setter Property="Template" Value="{StaticResource WpfUiMenuItemTopLevelItemTemplateKey}" />
            </Trigger>
            <Trigger Property="MenuItem.Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{StaticResource WpfUiMenuItemSubmenuHeaderTemplateKey}" />
            </Trigger>
            <Trigger Property="MenuItem.Role" Value="SubmenuItem">
                <Setter Property="Template" Value="{StaticResource WpfUiMenuItemSubmenuItemTemplateKey}" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="controls:MenuItem.SymbolIcon" Value="Empty" />
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{DynamicResource DefaultControlFocusVisualStyle}" />
        <Setter Property="KeyboardNavigation.IsTabStop" Value="True" />
        <Setter Property="Focusable" Value="True" />
    </Style>
    <Style x:Key="{x:Type controls:MenuItem}" BasedOn="{StaticResource WpfUiMenuItem}" TargetType="{x:Type controls:MenuItem}" />
    
    <Style x:Key="UiContextMenu" TargetType="{x:Type ContextMenu}">
        <Setter Property="Foreground" Value="{SolidColorBrush Color={DynamicResource TextFillColorPrimary}}" />
        <Setter Property="Foreground" Value="{SolidColorBrush Color={DynamicResource TextFillColorPrimary}}" />
        <Setter Property="Background" Value="{DynamicResource SystemFillColorSolidNeutralBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource MenuBorderColorDefaultBrush}" />
        <Setter Property="MinWidth" Value="140" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="ContextMenu.HasDropShadow" Value="False" />
        <Setter Property="Grid.IsSharedSizeScope" Value="True" />
        <Setter Property="PopupAnimation" Value="Slide" />
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <ControlTemplate.Triggers>
                        <Trigger Property="ContextMenu.IsOpen" Value="True" />
                    </ControlTemplate.Triggers>
                    <Border Name="Border" Padding="0,3,0,3" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="8">
                        <StackPanel ClipToBounds="True" IsItemsHost="True" DirectionalNavigation="Cycle" Orientation="Vertical" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type ContextMenu}" BasedOn="{StaticResource UiContextMenu}" TargetType="{x:Type ContextMenu}" />
</ResourceDictionary>